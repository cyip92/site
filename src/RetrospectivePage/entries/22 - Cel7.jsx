import { Link } from "react-router-dom";

import ConversationLine from "../common/ConversationLine";

const DevlogEntry = () => {
  return (
    <>
      <div>
        <h3>Generated Universes</h3>
        With bug reports from the second-wave testers slowing down, we had time to look at content
        in the later parts of the game again:
        <div className="o-quote-box">
          <ConversationLine
            name="Hevi"
            text={`Can we brainstorm some Pelle?`}
          />
          <ConversationLine
            name="Dan"
            text={`Yep I think so`}
          />
          <ConversationLine
            name="Hevi"
            text={`I think main priorities now would be to get Ra into shape and figure out what to do with Pelle`}
          />
          <ConversationLine
            name="Dan"
            text={`(though keep in mind Ra and Lai'tela aren't 100% finalized yet)`}
          />
          <ConversationLine
            name="Hevi"
            text={`What do you feel like needs to be done about Laitela?`}
          />
          <ConversationLine
            name="Me"
            text={`I'm not sure exactly what needs to be changed, but it's almost entirely untested iirc`}
          />
        </div>
        <br />
        The existing version of Pelle was very bare-bones and never revisited
        after <Link to="/ADdevlog/10">the initial draft almost a year beforehand</Link>. When we started
        brainstorming new ideas, Hevi went firmly into the idea that Pelle would end up being a
        genre switch in order to make the final experience very unique. The plan was that its new mechanics
        would be taken from a different sub-genre of incremental games.
        <br />
        <br />
        The first idea which stuck was based
        on <a href="https://jayseesee.github.io/Crittermound-Fork/index.html">Critter Mound</a>, an incremental
        based on breeding together different critters for favourable attributes. Hevi then proceeded to put
        together some more concrete mechanics and Garnet pitched in with some ideas as well:
        <ul>
          <li>
            There are two types of generated universes, one which creates antimatter like normal gameplay and
            another which creates matter instead. You are given one of each type at the start and they each
            have some innate challenge restriction that makes them more difficult to complete.
          </li>
          <li>
            By completing a universe, it becomes usable for breeding. New universes are generated by picking one
            of each type, and there&apos;s a chance that an offspring universe gains a new attribute which acts
            as an upgrade. These new attributes would also be transferred on successive uses for breeding.
          </li>
          <li>
            The universes&apos; challenge restrictions become tougher as they gain more attributes. The actual
            details would be randomly generated, but the intent was that you have to climb through a series of
            successively harder challenges.
          </li>
          <li>
            After some number of challenge universes were completed, you would become able
            to &quot;sacrifice&quot; your oldest universes for permanent bonuses as well.
          </li>
          <li>
            Every form of upgrade would primarily boost the new universe-breeding mechanics initially, but
            eventually they would start boosting older stats like Glyph level. The final unlockable attribute
            would be something that slowly but passively produces galaxies.
          </li>
        </ul>
        This was the first time the idea for the concept of a Galaxy Generator was mentioned. Hevi thought it
        would be an interesting thing to end the entire game on, which was an idea which stuck through until
        release. The rest of the concept though, while potentially interesting on the surface, was scrapped
        after some discussion for a multitude of reasons - it was a massive jump in complexity, the genre
        switch would probably turn many players away, it could come off as unoriginal and/or heavily based
        on randomness, and procedural content generation would heavily increase testing and dev time.

        <h3>MAD Pelle</h3>
        The first serious alternate design idea that actually went somewhere and started being developed
        was pitched by Jazz and based on the theming of a nuclear apocalypse:
        <div className="o-quote-box">
          MAD, Pelle blows up everything with a completed reality and you have basically nothing
          in a gamestate I&apos;m just calling &apos;doomed&apos;. You get upgrades from
          that &apos;doomed&apos; state, with the option of going back in time to before you
          complete the reality, to retry/utilize the new upgrades, but you keep the doomed
          upgrades in both &apos;normal&apos; and &apos;doomed&apos; states 
        </div>
        <br />
        This idea was repeatedly referred to as &quot;MAD Pelle,&quot; which was named after the military doctrine
        of <a href="https://en.wikipedia.org/wiki/Mutual_assured_destruction">Mutually Assured Destruction</a> from
        the Cold War era - Jazz summed the concept up as &quot;<b>because quite frankly, Pelle&apos;s a dick. If he
        can&apos;t win, no one can / MAD is his way of ensuring that</b>&quot; and used that as inspiration for
        the in-game lore as well. There were some similarities with what the final version of Pelle ended up being,
        but also lots of differences when getting into the specific details:
        <ul>
          <li>
            Pelle&apos;s reality is easy, but its reward is unknown and in some senses a trap. When completed,
            the game &quot;rewards&quot; you by placing you into a <i>Doomed</i> state, where you lose everything
            and are basically brought back to the very start of the game.
          </li>
          <li>
            Certain progression milestones in this Doomed state
            give <a href="https://pastebin.com/01tb8kca">upgrades</a> which make things easier. There would also
            be new resources introduced within Doomed in order to make it feel more novel than a simple replay
            of the game.
          </li>
          <li>
            At some point you get an upgrade which lets you un-Doom your game, returning you to the moment
            before you entered Pelle&apos;s reality for the first time. However, you <i>keep</i> all of the
            upgrades you gained within the Doomed state. (Doomed-specific resources and any associated
            upgrades would become inactive.)
          </li>
          <li>
            As you progress further and further, Doomed upgrades would start being extremely powerful - to
            the point where a Doomed state gradually becomes even stronger than normal gameplay.
          </li>
        </ul>
        An important concept for MAD Pelle was the idea of Pelle making a Doomsday machine,
        which Jazz elaborated upon:
        <div className="o-quote-box">
          when I came up with MAD/Doomed Pelle, I had pretty much just watched Dr Strangelove,
          which has a doomsday machine. And the way that works, is that you have a list of
          things which need to be checked off. If all of those things are checked off,
          fire the nukes, any means necessary
          <br />
          Pelle&apos;s reality, in essence, is a more complex doomsday machine.
          <br />
          Each individual thing that&apos;s checked off does it&apos;s own nerf to Doomed AD
          <br />
          and all the things that are checked off, occur at once upon the &apos;activation&apos; of
          the doomsday machine
          <br />
          instead of being &apos;if all flags are ticked, launch the nukes&apos; it&apos;s &apos;do
          x for every flag ticked&apos;
        </div>
        <br />
        Entering a Doomed state in this version of Pelle was more than just clicking a button - you
        had to go through the process of completing its simple reality as well. The doomsday machine
        had a bunch of conditions it would check for in the process of completing Pelle&apos;s reality,
        and then once the reality was completed, it would apply all its Doomed-state nerfs based on which
        conditions triggered and which ones didn&apos;t. These were called &quot;flags,&quot; and had a
        few important aspects to them in terms of how they existed in-game:
        <ul>
          <li>
            All of these conditions would be hidden - the lore would tell you that the Doomsday
            machine <i>exists</i>, but all you know is that <i>something</i> you did caused things to
            be worse. In principle you could avoid things when Dooming again, but without knowing the
            &quot;internals of the machine,&quot; your best course of action was to do as little as
            possible to avoid making things even worse.
          </li>
          <li>
            Some nerfs tied to these conditions would still apply if avoided, just to a lesser
            degree - ultimately the Doomed state was meant to be punishing no matter what. As
            Jazz put it: &quot;<b>it&apos;s not exactly a win condition, but a survival condition</b>&quot;
          </li>
          <li>
            A few conditions were completely unavoidable - this was meant to be in combination with
            a near-the-end upgrade which would reveal all the conditions, leading
            the player to &quot;<b>recoil in horror that all the things which are normal AD actions,
            are irreversibly linked to conditions. The doomsday machine has flags tied to whatever&apos;s
            forced, in every single action of AD / any amount of real time passed? do this. Have any
            amount of AM at any point? do this</b>&quot;
          </li>
        </ul>
        This idea made it to the final version of Pelle, but only simplified greatly in the form of
        five completely unavoidable Pelle Strikes and Rifts. A key difference was that MAD Pelle
        was the only version of Pelle which allowed you to exit the Doomed state, which meant that
        it was also the only situation where avoiding the conditions was a meaningful idea since you
        never had a second try.
        <br />
        <br />
        At the end of a very lengthy yet highly productive conversation about how to implement all
        of these ideas, Jazz wrote up&nbsp;
        <a href="https://github.com/IvarK/AntimatterDimensionsSourceCode/issues/1286">an issue </a>
        on the Github repo outlining the basics of the concept as well as all the upgrades and
        ideas he had come up with at that point. Many parts of MAD Pelle didn&apos;t make it to
        the final version of the game, but a lot of things did - if not as originally outlined,
        at least in spirit or in a similar alternate implementation.

        <h3>Too Much Automation</h3>
        Lai&apos;tela mechanics were very lacking in automation in previous versions - Dark Matter
        Dimensions had no autobuyers, nor did any of the new reset mechanics have anything other
        than a button you had to click. Part of our wild stream of brainstorming ideas included
        a set of singularity milestones which existed purely for the sake of providing automation
        to the new mechanics we added.
        <br />
        <br />
        Amongst all of the automation-based milestones we added into the game which remained until
        release, there was a particular one we added which didn&apos;t - a milestone which would
        automatically raise the Dark Energy cap if it was (loosely speaking) &quot;too low&quot; and
        could be higher. The reason why this milestone was removed will become clear in a moment.
        <br />
        <br />
        Now that some of the second-wave testers were running through Ra, I was able to rationalise
        spending some time playtesting Lai&apos;tela to make sure that everything was in order by the
        time they got there. The first day of testing was very slow until I had enough Dark Energy
        to start gaining Singularities, at which point it rapidly snowballed and led to an amusing
        conversation between me and Jazz:
        <div className="o-quote-box">
          <ConversationLine
            name="Me"
            text={`okay I have an issue with Lai'tela`}
          />
          <ConversationLine
            name=""
            text={`I unlocked singularity automation like 6 hours ago or so and in the meantime ate
              dinner and played a bunch of monster hunter`}
          />
          <ConversationLine
            name=""
            text={`the celestial seems to have mostly completed itself while I was gone`}
          />
          <ConversationLine
            name="Jazz"
            text={`that is lai'tela's current problem, yes`}
          />
          <ConversationLine
            name=""
            text={`Singularity automation is too powerful`}
          />
          <ConversationLine
            name=""
            text={`I still find it absolutely hilarious that it can do that`}
          />
          <ConversationLine
            name="Me"
            text={`I mean yes I want automation, but I don't automation to automatically do it all for me`}
          />
          <ConversationLine
            name=""
            text={`I want automation with knobs I can tweak`}
          />
          <ConversationLine
            name="Jazz"
            text={`You just didn't look at the machine so it tweaked the knobs for you`}
          />
          <ConversationLine
            name=""
            text={`I hate to say it but Lai'&apos;'tela needs a rework`}
            strike={true}
          />
        </div>
        Needless to say, we had to remove the automatic Singularity cap adjustment so that the game wouldn&apos;t
        play itself for you to this degree, and we also took this opportunity to adjust the general strength of
        the other automation-related milestones. We found that Lai&apos;tela&apos;s content balancing was all
        about tweaking automation to be good enough to properly substitute for manual actions, yet still lacking
        enough to leave the desire for improvement until it&apos;s maxed out.
        <br />
        <br />
        We occasionally came up with amusing yet still mostly accurate analogies when discussing game mechanics
        in the testing channels, and this incident was known as the &quot;self-building house&quot; Celestial
        for a bit. If there was ever any doubt that you can have too much automation in an incremental, this
        was proof that you definitely can.
        <br />
        <br />
        <i>
          It turned out that this was actually only the start of our problems with game content balancing around
          Lai&apos;tela. And more pertinently, many of these problems ended up causing some unfortunate further
          disagreements. Those will both be a topic for next week.
        </i>
      </div>
    </>
  )
}

export default DevlogEntry;
